apiVersion: apps/v1
kind: Deployment
metadata:
  name: attest-provider
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      run: attest-provider
  template:
    metadata:
      labels:
        run: attest-provider
    spec:
      containers:
      - image: {{ .Values.image }}
        imagePullPolicy: IfNotPresent
        name: attest-provider
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        args:
        - --cert-dir={{ .Values.certDir }}
        {{- if .Values.clientCAFile }}
        - --client-ca-file={{ .Values.clientCAFile }}
        {{- end }}
        - --port={{ .Values.port }}
        {{- if .Values.tufRoot }}
        - --tuf-root={{ .Values.tufRoot }}
        {{- end }}
        {{- if .Values.tufMetadataSource }}
        - --tuf-metadata-source={{ .Values.tufMetadataSource }}
        {{- end }}
        {{- if .Values.tufTargetsSource }}
        - --tuf-targets-source={{ .Values.tufTargetsSource }}
        {{- end }}
        {{- if .Values.localPolicyDir }}
        - --local-policy-dir={{ .Values.localPolicyDir }}
        {{- end }}
        {{- if .Values.policyCacheDir }}
        - --policy-cache-dir={{ .Values.policyCacheDir }}
        {{- end }}
        {{- if .Values.attestationStyle }}
        - --attestation-style={{ .Values.attestationStyle }}
        {{- end }}
        {{- if .Values.referrersRepo }}
        - --referrers-source={{ .Values.referrersRepo }}
        {{- end }}

        ports:
        - containerPort: {{ .Values.port }}
          protocol: TCP
        volumeMounts:
        - name: tuf-temp
          mountPath: /tuf_temp
        {{- if .Values.localPolicyDir }}
        - name: local-policy
          mountPath: {{ .Values.localPolicyDir }}
          readOnly: true
        {{- end }}
        {{- if .Values.clientCAFile }}
        - name: gatekeeper-ca-cert
          mountPath: /tmp/gatekeeper
          readOnly: true
        {{- end }}
        {{- if .Values.certSecret }}
        - name: tls-cert-key
          mountPath: {{ .Values.certDir }}
          readOnly: true
        {{- end }}
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: tuf-temp
        emptyDir: {}
      {{- if .Values.localPolicyDir }}
      - name: local-policy
        configMap:
          name: {{ .Values.localPolicyConfigMap }}
      {{- end }}
      {{- if .Values.clientCAFile }}
      - name: gatekeeper-ca-cert
        secret:
          secretName: gatekeeper-webhook-server-cert
          items:
          - key: ca.crt
            path: ca.crt
      {{- end }}
      {{- if .Values.certSecret }}
      - name: tls-cert-key
        secret:
          secretName: {{ .Values.certSecret }}
          items:
          - key: tls.crt
            path: tls.crt
          - key: tls.key
            path: tls.key
      {{- end }}
